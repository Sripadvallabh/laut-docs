
.. _execute:

execute
=======

Executes a command on the device loaded in LAUT shell and autogenerates
pyATS blitz *'execute'* action snippet.

An example of ``execute show ip route`` on device 'l2switch':

.. code-block:: console

   (lӓut-leaf2-lag2) device l2switch
   (lӓut-l2switch) execute show ip route
   2024-07-07 13:33:05: %LAUT-INFO: +..............................................................................+
   2024-07-07 13:33:05: %LAUT-INFO: :                    Execute 'show ip route' on 'l2switch'                     :
   2024-07-07 13:33:05: %LAUT-INFO: +..............................................................................+

   2024-07-07 13:33:05,912: %UNICON-INFO: +++ l2switch with via 'cli': executing command 'show ip route' +++
   show ip route
   Codes: L - local, C - connected, S - static, R - RIP, M - mobile, B - BGP
          D - EIGRP, EX - EIGRP external, O - OSPF, IA - OSPF inter area
          N1 - OSPF NSSA external type 1, N2 - OSPF NSSA external type 2
          E1 - OSPF external type 1, E2 - OSPF external type 2, m - OMP
          n - NAT, Ni - NAT inside, No - NAT outside, Nd - NAT DIA
          i - IS-IS, su - IS-IS summary, L1 - IS-IS level-1, L2 - IS-IS level-2
          ia - IS-IS inter area, * - candidate default, U - per-user static route
          H - NHRP, G - NHRP registered, g - NHRP registration summary
          o - ODR, P - periodic downloaded static route, l - LISP
          a - application route
          + - replicated route, % - next hop override, p - overrides from PfR
          & - replicated local route overrides by connected

   Gateway of last resort is not set

         100.0.0.0/32 is subnetted, 1 subnets
   C        100.100.100.100 is directly connected, Loopback30
   l2switch#
   Add INCLUDE section (y/n): n
   Add EXCLUDE section (y/n): n
   Add SAVE section (y/n): n
   (lӓut-l2switch)
   (lӓut-l2switch) list 1
               - execute:
                   device: l2switch
                   command: ['show ip route']
   (lӓut-l2switch)

The output from the command execution will be printed on the terminal screen along
with a prompt requesting the user to input INCLUDE, EXCLUDE, SAVE sections.

**INCLUDE**

This section is used to verify if something 'is' present in the output of an ``execute`` command.
Any input verification to this section should be a regex pattern.

For example, in the above ``execute show ip route``, to verify if 100.100.100.100 appears as
a directly connected route via Loopback30 one could input the following regex pattern:

   C\\s+100.100.100.100 is directly connected, Loopback30

The input to the INCLUDE section for the above pattern would look like this:

.. code-block:: console

   Add INCLUDE section (y/n): y
   Enter pattern to INCLUDE (Press enter for multiple patterns): C\s+100.100.100.100 is directly connected, Loopback30

All inputs to INCLUDE section appear in the autogenerated blitz snippet as an entry
to *'include'* as seen below for the above example:

.. code-block:: console

   (lӓut-l2switch) list 1
               - execute:
                device: l2switch
                command: ['show ip route']
                include:
                    - 'C\\s+100.100.100.100 is directly connected, Loopback30'
   (lӓut-l2switch)

This section also accepts multiple regex patterns in case users want to verify more than
one pattern in the output. To do so, enter the *'INCLUDE>'* prompt by simply press enter
once after which you can keep on adding patterns. After you have reached the last pattern to input,
just press <enter> once again to exit this mode.

See an example where 3 routes (2.2.2.2, 5.5.5.5, 30.0.0.0/24) were verified in 'show ip route':

.. code-block:: console

   (lӓut-leaf2-lag2) execute show ip route
   2024-07-08 21:28:07: %LAUT-INFO: +..............................................................................+
   2024-07-08 21:28:07: %LAUT-INFO: :                   Execute 'show ip route' on 'leaf2-lag2'                    :
   2024-07-08 21:28:07: %LAUT-INFO: +..............................................................................+

   2024-07-08 21:28:08,380: %UNICON-INFO: +++ leaf2-lag2 with via 'cli': executing command 'show ip route' +++
   show ip route
   Codes: L - local, C - connected, S - static, R - RIP, M - mobile, B - BGP
          D - EIGRP, EX - EIGRP external, O - OSPF, IA - OSPF inter area
          N1 - OSPF NSSA external type 1, N2 - OSPF NSSA external type 2
          E1 - OSPF external type 1, E2 - OSPF external type 2, m - OMP
          n - NAT, Ni - NAT inside, No - NAT outside, Nd - NAT DIA
          i - IS-IS, su - IS-IS summary, L1 - IS-IS level-1, L2 - IS-IS level-2
          ia - IS-IS inter area, * - candidate default, U - per-user static route
          H - NHRP, G - NHRP registered, g - NHRP registration summary
          o - ODR, P - periodic downloaded static route, l - LISP
          a - application route
          + - replicated route, % - next hop override, p - overrides from PfR
          & - replicated local route overrides by connected

   Gateway of last resort is not set

         1.0.0.0/32 is subnetted, 1 subnets
   O        1.1.1.1 [110/3] via 30.30.30.30, 1w4d, GigabitEthernet1/0/16
         2.0.0.0/32 is subnetted, 1 subnets
   C        2.2.2.2 is directly connected, Loopback0
         3.0.0.0/32 is subnetted, 1 subnets
   O        3.3.3.3 [110/3] via 30.30.30.30, 6d09h, GigabitEthernet1/0/16
         5.0.0.0/32 is subnetted, 1 subnets
   O        5.5.5.5 [110/2] via 30.30.30.30, 3w3d, GigabitEthernet1/0/16
         20.0.0.0/24 is subnetted, 1 subnets
   O        20.20.20.0 [110/2] via 30.30.30.30, 1w4d, GigabitEthernet1/0/16
         30.0.0.0/8 is variably subnetted, 2 subnets, 2 masks
   C        30.30.30.0/24 is directly connected, GigabitEthernet1/0/16
   L        30.30.30.31/32 is directly connected, GigabitEthernet1/0/16
         40.0.0.0/24 is subnetted, 1 subnets
   O        40.40.40.0 [110/2] via 30.30.30.30, 1w0d, GigabitEthernet1/0/16
         111.0.0.0/32 is subnetted, 1 subnets
   O        111.111.111.111 [110/3] via 30.30.30.30, 1w4d, GigabitEthernet1/0/16
   leaf2-lag2#
   Add INCLUDE section (y/n): y
   Enter pattern to INCLUDE (Press enter for multiple patterns):
   (INCLUDE)> 2.2.2.2 is directly connected, Loopback0
   (INCLUDE)> 5.5.5.5 \[110/2\] via 30.30.30.30, \w*, GigabitEthernet1/0/16
   (INCLUDE)> 30.30.30.0/24 is directly connected, GigabitEthernet1/0/16
   (INCLUDE)>
   Add EXCLUDE section (y/n): n
   Add SAVE section (y/n): n

The corresponding autogenerated code for the above ``execute`` command would look like this
consisting of multiple *'include'* entries:

.. code-block:: console

   (lӓut-leaf2-lag2) list 1
               - execute:
                   device: leaf2-lag2
                   command: ['show ip route']
                   include:
                       - '2.2.2.2 is directly connected, Loopback0'
                       - '5.5.5.5 \\[110/2\\] via 30.30.30.30, \\w*, GigabitEthernet1/0/16'
                       - '30.30.30.0/24 is directly connected, GigabitEthernet1/0/16'

When user inputs a regex pattern that doesn't match the output, LAUT explicitly mentions that it
doesn't match the output & whether the user would still like to add this pattern as an
blitz *'include'* entry.
To better understand this, note the below example where we mistakenly
type [110/2] in the input not considering the fact that both '[' and ']' are special symbols in
regex & we have failed to add an escape '\'; which LAUT is quick at pointing out & when we escape it,
the error message disappears:

.. code-block:: console

   Add INCLUDE section (y/n): y
   Enter pattern to INCLUDE (Press enter for multiple patterns):
   (INCLUDE)> 2.2.2.2 is directly connected, Loopback0
   (INCLUDE)> 5.5.5.5 [110/2] via 30.30.30.30, \w+, GigabitEthernet1/0/16
   Pattern would cause this blitz action to fail
   Do you still want to add this pattern (y/n): n
   (INCLUDE)> 5.5.5.5 \[110/2\] via 30.30.30.30, \w*, GigabitEthernet1/0/16
   (INCLUDE)> 30.30.30.0/24 is directly connected, GigabitEthernet1/0/16
   (INCLUDE)>

**EXCLUDE**

Behaves in the same way as an INCLUDE section, except that it checks if a particular
regex pattern DOES NOT match the ``execute`` output.

Continuing with the previous example, if we *shut* the interface 'GigabitEthernet1/0/16'
it is expected that the route '5.5.5.5' is expected to not show up in 'show ip route' command.
In this particular case, we should input the regex pattern that matches 5.5.5.5 route in the
EXCLUDE section so as to assure that after the interface has been *shut* we shouldn't expect
the route to be present in the routing table:

.. code-block:: console

   (lӓut-leaf2-lag2) configure interface GigabitEthernet1/0/16+shutdown
   2024-07-09 09:31:08: %LAUT-INFO: +..............................................................................+
   2024-07-09 09:31:08: %LAUT-INFO: :  Configure ['interface GigabitEthernet1/0/16', 'shutdown'] on 'leaf2-lag2'   :
   2024-07-09 09:31:08: %LAUT-INFO: +..............................................................................+

   2024-07-09 09:31:08,282: %UNICON-INFO: +++ leaf2-lag2 with via 'cli': configure +++
   config term
   Enter configuration commands, one per line.  End with CNTL/Z.
   leaf2-lag2(config)#interface GigabitEthernet1/0/16
   leaf2-lag2(config-if)#shutdown
   leaf2-lag2(config-if)#end
   leaf2-lag2#
   (lӓut-leaf2-lag2) execute show ip route
   2024-07-09 09:31:12: %LAUT-INFO: +..............................................................................+
   2024-07-09 09:31:12: %LAUT-INFO: :                   Execute 'show ip route' on 'leaf2-lag2'                    :
   2024-07-09 09:31:12: %LAUT-INFO: +..............................................................................+

   2024-07-09 09:31:12,855: %UNICON-INFO: +++ leaf2-lag2 with via 'cli': executing command 'show ip route' +++
   show ip route
   Codes: L - local, C - connected, S - static, R - RIP, M - mobile, B - BGP
          D - EIGRP, EX - EIGRP external, O - OSPF, IA - OSPF inter area
          N1 - OSPF NSSA external type 1, N2 - OSPF NSSA external type 2
          E1 - OSPF external type 1, E2 - OSPF external type 2, m - OMP
          n - NAT, Ni - NAT inside, No - NAT outside, Nd - NAT DIA
          i - IS-IS, su - IS-IS summary, L1 - IS-IS level-1, L2 - IS-IS level-2
          ia - IS-IS inter area, * - candidate default, U - per-user static route
          H - NHRP, G - NHRP registered, g - NHRP registration summary
          o - ODR, P - periodic downloaded static route, l - LISP
          a - application route
          + - replicated route, % - next hop override, p - overrides from PfR
          & - replicated local route overrides by connected

   Gateway of last resort is not set

         1.0.0.0/32 is subnetted, 1 subnets
   B        1.1.1.1 [200/0] via 1.1.1.1, 00:00:04
         2.0.0.0/32 is subnetted, 1 subnets
   C        2.2.2.2 is directly connected, Loopback0
         3.0.0.0/32 is subnetted, 1 subnets
   B        3.3.3.3 [200/0] via 3.3.3.3, 00:00:04
         20.0.0.0/24 is subnetted, 1 subnets
   B        20.20.20.0 [200/0] via 1.1.1.1, 00:00:04
         40.0.0.0/24 is subnetted, 1 subnets
   B        40.40.40.0 [200/0] via 3.3.3.3, 00:00:04
         111.0.0.0/32 is subnetted, 1 subnets
   B        111.111.111.111 [200/0] via 1.1.1.1, 00:00:04
   leaf2-lag2#
   Add INCLUDE section (y/n): n
   Add EXCLUDE section (y/n): y
   Enter pattern to EXCLUDE (Press enter for multiple patterns): 5.5.5.5 \[110/2\] via 30.30.30.30, \w*, GigabitEthernet1/0/16
   Add SAVE section (y/n): n

For the above EXCLUDE input, following is the autogenerated blitz action snippet consisting
of the 5.5.5.5 route regex pattern as an *'exclude'* entry:

.. code-block:: console

   (lӓut-leaf2-lag2) list 1
               - execute:
                   device: leaf2-lag2
                   command: ['show ip route']
                   exclude:
                       - '5.5.5.5 \\[110/2\\] via 30.30.30.30, \\w*, GigabitEthernet1/0/16'
   (lӓut-leaf2-lag2)

EXCLUDE section also accepts multiple regex patterns in the same way as INCLUDE section does.

**SAVE**

.. note::

   For first time readers, skip this section altogether.
   Read only after going through 'Variables & Parameters' in LAUT features section first.

YET TO BE ADDED
