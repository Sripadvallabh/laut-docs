list
====

Prints autogenerated blitz action snippets.

Basic usage
-----------

There are 3 ways of using the ``list`` command:

   * ``list <NUMBER>``: Prints last 'n' autogenerated snippets.
   * ``list -n <SECTION_NAME>``: Prints autogenerated snippets under given test section.
   * ``list -a``: Prints all autogenerated snippets.

``list <NUMBER>``
-----------------

The command ``list 1`` can print the last autogenerated blitz action snippet. This is
by far the most commonly used form of the ``list`` command.

A simple example showing an autogenerated blitz snippet for ``sleep`` command:

.. code-block:: console

   (lӓut-host1) sleep 5
   2024-07-29 16:49:29: %LAUT-INFO: +------------------------------------------------------------------------------+
   2024-07-29 16:49:29: %LAUT-INFO: :                             Sleep for 5 seconds                              :
   2024-07-29 16:49:29: %LAUT-INFO: +------------------------------------------------------------------------------+
   (lӓut-host1) list 1
   sleep:
     sleep_time: 5
   (lӓut-host1)

To better illustrate the printing of last 'n' snippets, in the following example 3 different
commands were invoked in the order shown below:

   * configure no logging console
   * sleep 2
   * execute show ip route -i

.. code-block:: console

   (lӓut-host1) configure no logging console
   2024-07-29 16:55:45: %LAUT-INFO: +..............................................................................+
   2024-07-29 16:55:45: %LAUT-INFO: :                  Configure 'no logging console' on 'host1'                   :
   2024-07-29 16:55:45: %LAUT-INFO: +..............................................................................+
   
   2024-07-29 16:55:45,867: %UNICON-INFO: +++ host1 with via 'a': configure +++
   config term
   Enter configuration commands, one per line.  End with CNTL/Z.
   host1(config)#no logging console
   host1(config)#end
   host1#
   (lӓut-host1) sleep 2
   2024-07-29 16:55:49: %LAUT-INFO: +------------------------------------------------------------------------------+
   2024-07-29 16:55:49: %LAUT-INFO: :                             Sleep for 2 seconds                              :
   2024-07-29 16:55:49: %LAUT-INFO: +------------------------------------------------------------------------------+
   (lӓut-host1) execute show ip route -i
   2024-07-29 16:56:10: %LAUT-INFO: +..............................................................................+
   2024-07-29 16:56:10: %LAUT-INFO: :                      Execute 'show ip route' on 'host1'                      :
   2024-07-29 16:56:10: %LAUT-INFO: +..............................................................................+
   
   2024-07-29 16:56:10,941: %UNICON-INFO: +++ host1 with via 'a': executing command 'show ip route' +++
   show ip route
   Codes: L - local, C - connected, S - static, R - RIP, M - mobile, B - BGP
          D - EIGRP, EX - EIGRP external, O - OSPF, IA - OSPF inter area
          N1 - OSPF NSSA external type 1, N2 - OSPF NSSA external type 2
          E1 - OSPF external type 1, E2 - OSPF external type 2, m - OMP
          n - NAT, Ni - NAT inside, No - NAT outside, Nd - NAT DIA
          i - IS-IS, su - IS-IS summary, L1 - IS-IS level-1, L2 - IS-IS level-2
          ia - IS-IS inter area, * - candidate default, U - per-user static route
          H - NHRP, G - NHRP registered, g - NHRP registration summary
          o - ODR, P - periodic downloaded static route, l - LISP
          a - application route
          + - replicated route, % - next hop override, p - overrides from PfR
          & - replicated local route overrides by connected
   
   Gateway of last resort is not set
   
         1.0.0.0/32 is subnetted, 1 subnets
   C        1.1.1.1 is directly connected, Loopback30
   host1#
   2024-07-29 16:56:11: %LAUT-INFO: +..............................................................................+
   2024-07-29 16:56:11: %LAUT-INFO: :                                   INCLUDE                                    :
   2024-07-29 16:56:11: %LAUT-INFO: +..............................................................................+
   Enter pattern to INCLUDE (Press enter for multiple patterns): 1.1.1.1
   (lӓut-host1)

Now, please carefully observe the ``list`` command output with the argument 'n' being 1,2,3 below:

.. code-block:: console

   (lӓut-host1) list 1
   execute:
     device: host1
     command: show ip route
     include:
       - 1.1.1.1

The last command was ``execute show ip route -i`` and the same was seen in ``list 1``.

.. code-block:: console

   (lӓut-host1) list 2
   sleep:
     sleep_time: 2
   execute:
     device: host1
     command: show ip route
     include:
       - 1.1.1.1

The second last command was ``sleep 2`` and it appears in ``list 2`` along with ``execute show ip route -i``.

.. code-block:: console

   (lӓut-host1) list 3
   configure:
     device: host1
     command: no logging console
   sleep:
     sleep_time: 2
   execute:
     device: host1
     command: show ip route
     include:
       - 1.1.1.1
   (lӓut-host1)

The third last command ``configure no logging console`` is seen in ``list 3`` at the top, we can thereby
conclude that ``list <NUMBER>`` prints the last 'n' autogenerated snippets in that order.

It is important to note that ``list <NUMBER>`` does not print autogenerated blitz action snippets
beyond the current test section.
Continuing with the above example, if we now create a test section called 'new' the following is the output
of the ``list <NUMBER>`` command:

.. code-block:: console

   (lӓut-host1) list 3
   configure:
     device: host1
     command: no logging console
   sleep:
     sleep_time: 2
   execute:
     device: host1
     command: show ip route
     include:
       - 1.1.1.1
   (lӓut-host1)
   (lӓut-host1) test_section new
   (lӓut-host1) list 1
   (lӓut-host1) list 2
   (lӓut-host1) list 3
   (lӓut-host1)

As seen above, once a new test section is created, ``list <NUMBER>`` can no longer be used to view
the autogenerated blitz action snippets; hence we need to use the other two forms of the ``list`` command
in this case.

``list -n <SECTION_NAME>``
--------------------------

This form of the ``list`` command is used to view the autogenerated blitz action snippets categorized
by their test section name.

Continuing with the above example wherein we couldn't see the 3 autogenerated snippets of the earlier
section after creating a new test section 'new', we could view them by invoking ``list -n default``
('default' was the earlier test section):

.. code-block:: console

   (lӓut-host1) list -n default
   default:
     - configure:
         device: host1
         command: no logging console
     - sleep:
         sleep_time: 2
     - execute:
         device: host1
         command: show ip route
         include:
           - 1.1.1.1
   (lӓut-host1)

To illustrate further, let's try the command ``configure no ip domain lookup`` in the new test section
and observe the outputs of the ``list -n`` command:

.. code-block:: console

   (lӓut-host1) configure no ip domain lookup
   2024-07-29 17:09:21: %LAUT-INFO: +..............................................................................+
   2024-07-29 17:09:21: %LAUT-INFO: :                  Configure 'no ip domain lookup' on 'host1'                  :
   2024-07-29 17:09:21: %LAUT-INFO: +..............................................................................+
   
   2024-07-29 17:09:21,303: %UNICON-INFO: +++ host1 with via 'a': configure +++
   config term
   Enter configuration commands, one per line.  End with CNTL/Z.
   host1(config)#no ip domain lookup
   host1(config)#end
   host1#
   (lӓut-host1) list -n default
   default:
     - configure:
         device: host1
         command: no logging console
     - sleep:
         sleep_time: 2
     - execute:
         device: host1
         command: show ip route
         include:
           - 1.1.1.1
   (lӓut-host1) list -n new
   new:
     - configure:
         device: host1
         command: no ip domain lookup

As seen above, the ``list -n default`` output doesn't change, however the new configuration reflects
in the output of ``list -n new`` which is the current test section.

``list -a``
------------

To view everything autogenerated so far, one can use ``list -a``. For the same example discussed earlier,
the command output looks like this:

.. code-block:: console

   (lӓut-host1) list -a
   default:
     - configure:
         device: host1
         command: no logging console
     - sleep:
         sleep_time: 2
     - execute:
         device: host1
         command: show ip route
         include:
           - 1.1.1.1
   new:
     - configure:
         device: host1
         command: no ip domain lookup
   (lӓut-host1)

Both the test sections 'default' and 'new' were observed with their corresponding action snippets in
one shot using this command. The action snippets are keyed under their respective test sections and
indented accordingly.
